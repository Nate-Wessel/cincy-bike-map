######################################################################
#
# CONVERTER
#
######################################################################

# Known Parsers detected by file extension.
# Other files or streams will be delegated to OsmXmlParser.

osmParser.pbf = de.cm.osm2po.plugins.OsmPbfParser
osmParser.o5m = de.cm.osm2po.plugins.OsmO5mParser
osmParser.o5m.gz = de.cm.osm2po.plugins.OsmO5mGzParser
osmParser.osm.bz2 = de.cm.osm2po.plugins.OsmXmlBz2Parser


fixTileSize = true

maxTilesPerLoop = 100

# Very useful Postprocess that renumbers vertexIDs by their location.
useQuadTileOrder = true


######################################################################
#
# DEFAULT TAG RESOLVER
#
######################################################################

# A TagResolver translates OSM-tags into a more useful set of information
# like name, speed, usage, ..., etc. If you need a special behavior,
# which cannot be handled by this default mechanism, feel free to implement
# your own TagResolver. The default WayTagResolver utilizes two 32bit-fields
# Each parsed osm-tag can modify flags in one of these fields
# either by allowing/setting bits (or-op.)
# or by denying/resetting bits (deferred inverse-and-op.).
# The default implementation is 'de.cm.osm2po.converter.DefaultWayTagResolver'
# Node- and RelationTagResolvers can only be influenced programmatically.

#wayTagResolver.class = com.to.another.package.YourWayTagResolver
#nodeTagResolver.class = com.to.another.package.YourNodeTagResolver
#relationTagResolver.class = com.to.another.package.YourRelationTagResolver

# Using a prefix allows us to hold different configurations in one file



wtr.flagList = bike, foot, rail, ferry, car
 
# only convert ways containing one of these flags

#wtr.finalMask = car
#wtr.finalMask = car|bike
wtr.finalMask = bike|foot

wtr.tag.highway.motorway =       1, 11, 20,  car
wtr.tag.highway.motorway_link =  1, 12, 20,  car
wtr.tag.highway.trunk =          1, 13, 20,  car
wtr.tag.highway.trunk_link =     1, 14, 20,  car
wtr.tag.highway.primary =        1, 15, 20,  car|bike|foot
wtr.tag.highway.primary_link =   1, 16, 20,  car|bike|foot
wtr.tag.highway.secondary =      1, 21, 20,  car|bike|foot
wtr.tag.highway.secondary_link = 1, 22, 20,  car|bike|foot
wtr.tag.highway.tertiary =       1, 31, 20,  car|bike|foot
wtr.tag.highway.residential =    1, 32, 20,  car|bike|foot
wtr.tag.highway.road =           1, 41, 20,  car|bike|foot
wtr.tag.highway.unclassified =   1, 42, 20,  car|bike|foot
wtr.tag.highway.service =        1, 51, 20,  car|bike|foot
wtr.tag.highway.service.parking_aisle = 1, 52, 8, car
wtr.tag.highway.living_street =  1, 63, 20,  car|bike|foot   
wtr.tag.highway.pedestrian =     1, 62, 20,  bike|foot
wtr.tag.highway.track =          1, 71, 20,  bike|foot
wtr.tag.highway.path =           1, 72, 20,  bike|foot
wtr.tag.highway.cycleway =       1, 81, 20,  bike|foot
wtr.tag.highway.footway =        1, 91, 20,  foot
wtr.tag.highway.steps =          1, 92, 20,  foot
wtr.tag.route.ferry =            2,  1, 20,  ferry|bike|foot
#wtr.tag.route.shuttle_train =    2,  2, 20,  rail|car
#wtr.tag.railway.rail =           3,  3, 20,  rail


#wtr.allow.motor[car|_vehicle].[yes|destination] = car
wtr.allow.[bicycle|cycleway] = bike

#wtr.deny.tracktype.grade[4|5] = car|bike
wtr.deny.access.no = car|bike|foot|rail|ferry
wtr.deny.vehicle.no = car|bike
wtr.deny.motor[_vehicle|car] = car
wtr.deny.bicycle.no = bike
wtr.deny.foot.no = foot

######################################################################
#
# LOGGER
#
######################################################################

# This is the LogLevel for global (log.level) and console (log.console.level)
# and file logging. Possible values are
# debug, progress, warn, info (default), error and fatal.

log.level = debug
log.file.level = debug
log.console.level = progress
#log.console.writer.class = de.cm.osm2po.logging.Log2poConsoleWriter
#log.console.writer.class = de.cm.osm2po.logging.LogJclWriter

# Redirecting of StandardOut (console).
# Possible values are out (default), err or null (quiet).

#log.console.to = err

######################################################################
#
# POSTPROCESSORS
#
######################################################################

postp.0.class = de.cm.osm2po.converter.PgRoutingWriter
